import { QdrantClient } from '@qdrant/qdrant-js';
import dotenv from 'dotenv';
import path from 'path';

// Cargar variables de entorno desde el backend
dotenv.config({ path: path.resolve(__dirname, '../../../.env') });

async function testQdrant() {
  console.log('üîç Probando conexi√≥n con Qdrant Cloud...\n');
  
  const qdrantUrl = process.env.QDRANT_URL;
  const qdrantApiKey = process.env.QDRANT_API_KEY;
  
  console.log('URL:', qdrantUrl);
  console.log('API Key:', qdrantApiKey ? '‚úì Configurada' : '‚úó No encontrada');
  
  try {
    const client = new QdrantClient({
      url: qdrantUrl,
      apiKey: qdrantApiKey,
    });
    
    // Probar conexi√≥n
    console.log('\nüì° Conectando a Qdrant Cloud...');
    const collections = await client.getCollections();
    console.log('‚úÖ Conexi√≥n exitosa!');
    console.log(`üìö Colecciones existentes: ${collections.collections.length}`);
    
    if (collections.collections.length > 0) {
      console.log('Colecciones:');
      collections.collections.forEach(col => {
        console.log(`  - ${col.name}`);
      });
    }
    
    // Crear una colecci√≥n de prueba
    const testCollectionName = 'test_superagent';
    console.log(`\nüî® Creando colecci√≥n de prueba: ${testCollectionName}`);
    
    try {
      await client.createCollection(testCollectionName, {
        vectors: {
          size: 1536, // Dimensi√≥n de OpenAI embeddings
          distance: 'Cosine'
        }
      });
      console.log('‚úÖ Colecci√≥n creada exitosamente!');
      
      // Limpiar - eliminar colecci√≥n de prueba
      console.log('\nüßπ Limpiando colecci√≥n de prueba...');
      await client.deleteCollection(testCollectionName);
      console.log('‚úÖ Colecci√≥n eliminada');
      
    } catch (error: any) {
      if (error.message?.includes('already exists')) {
        console.log('‚ÑπÔ∏è  La colecci√≥n ya existe');
      } else {
        throw error;
      }
    }
    
    console.log('\nüéâ ¬°Todo funciona correctamente! Qdrant Cloud est√° listo para usar.');
    
  } catch (error) {
    console.error('\n‚ùå Error al conectar con Qdrant:', error);
    console.error('\nVerifica que:');
    console.error('1. La URL y API Key sean correctas');
    console.error('2. El cluster est√© activo en Qdrant Cloud');
  }
}

// Ejecutar test
testQdrant(); 